{"version":3,"sources":["constants/states.js","api/results.js","services/results.js","PaginatedResults.js","Results.js","App.js","index.js"],"names":["states","_id","name","getSlotsByPin","pin","date","a","url","axios","get","headers","then","response","data","sessions","catch","err","console","error","res","getSlotsByDistrict","id","getResults","trim","distRes","pinRes","length","filterDist","filter","session","pincode","SessionCard","vaccine","min_age","capacity","paid","fee","Card","style","backgroundColor","minWidth","CardContent","marginTop","PaginatedResults","Grid","container","spacing","paddingRight","marginBottom","width","map","idx","item","xs","sm","md","lg","min_age_limit","fee_type","available_capacity","center_id","Results","results","indexOfLastItem","currPage","indexOfFirstItem","currResults","slice","paddingLeft","color","App","useState","stateList","districtList","setDistrictList","selectedStateObj","setSelectedStateObj","setLoading","selectedDistrictObj","setSelectedDistrictObj","age","setAge","setPin","Date","selectedDate","setSelectedDate","setResults","setCurrPage","getDistricts","event","target","value","districts","getFinalResults","format","district_id","resultsList","final","log","flex","paddingTop","paddingBottom","onSubmit","e","preventDefault","TextField","select","label","onChange","helperText","required","state","MenuItem","disabled","district","district_name","utils","DateFnsUtils","KeyboardButtonProps","Button","size","variant","height","type","display","justifyContent","alignItems","Pagination","count","Math","ceil","page","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64ce7b02.chunk.js","sourcesContent":["export const states = [\n  {_id:1,name:\"Andaman and Nicobar Islands\"},\n  {_id:2,name:\"Andhra Pradesh\"},\n  {_id:3,name:\"Arunachal Pradesh\"},\n  {_id:4,name:\"Assam\"},\n  {_id:5,name:\"Bihar\"},\n  {_id:6,name:\"Chandigarh\"},\n  {_id:7,name:\"Chhattisgarh\"},\n  {_id:8,name:\"Dadra and Nagar Haveli\"},\n  {_id:37,name:\"Daman and Diu\"},\n  {_id:9,name:\"Delhi\"},\n  {_id:10,name:\"Goa\"},\n  {_id:11,name:\"Gujarat\"},\n  {_id:12,name:\"Haryana\"},\n  {_id:13,name:\"Himachal Pradesh\"},\n  {_id:14,name:\"Jammu and Kashmir\"},\n  {_id:15,name:\"Jharkhand\"},\n  {_id:16,name:\"Karnataka\"},\n  {_id:17,name:\"Kerala\"},\n  {_id:18,name:\"Ladakh\"},\n  {_id:19,name:\"Lakshadweep\"},\n  {_id:20,name:\"Madhya Pradesh\"},\n  {_id:21,name:\"Maharashtra\"},\n  {_id:22,name:\"Manipur\"},\n  {_id:23,name:\"Meghalaya\"},\n  {_id:24,name:\"Mizoram\"},\n  {_id:25,name:\"Nagaland\"},\n  {_id:26,name:\"Odisha\"},\n  {_id:27,name:\"Puducherry\"},\n  {_id:28,name:\"Punjab\"},\n  {_id:29,name:\"Rajasthan\"},\n  {_id:30,name:\"Sikkim\"},\n  {_id:31,name:\"Tamil Nadu\"},\n  {_id:32,name:\"Telangana\"},\n  {_id:33,name:\"Tripura\"},\n  {_id:34,name:\"Uttar Pradesh\"},\n  {_id:35,name:\"Uttarakhand\"},\n  {_id:36,name:\"West Bengal\"}\n];","import axios from \"axios\"\n\nexport const getSlotsByPin = async (pin, date) => {\n  const url = `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin?pincode=${pin}&date=${date}`;\n\n  const res = await axios.get(url, {\n    headers: {\n      'accept': 'application/json',\n      'Accept-Language': 'en-US',\n    },\n  }).then(response => response.data.sessions).catch(err => console.error(err));\n  // console.log(res);\n  return res || [];\n}\n\nexport const getSlotsByDistrict = async (id, date) => {\n  const url = `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict?district_id=${id}&date=${date}`;\n\n  const res = await axios.get(url, {\n    headers: {\n      'accept': 'application/json',\n      'Accept-Language': 'en-US',\n    },\n  }).then(response => response.data.sessions).catch(err => console.error(err));\n  // console.log(res);\n  return res || [];\n}","import {getSlotsByDistrict, getSlotsByPin} from '../api/results';\n\n// const awaitedResults = async (pin, date, id) => {\n//     const res1\n// }\n\nexport const getResults = async (pin, date, id) => {\n    if(pin.trim() !== '') {\n        const distRes = await getSlotsByDistrict(id, date);\n        const pinRes = await getSlotsByPin(pin, date);\n        let filterDist;\n        if(distRes.length > 0 && pinRes.length > 0) {\n            filterDist = distRes.filter(session => {\n                return session.pincode !== pin;\n            });\n            // console.log(filterDist);\n            return [...pinRes, ...filterDist];\n        }\n    }\n    else {\n        const res = getSlotsByDistrict(id, date);\n\n        return res;\n    }\n}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Grid } from '@material-ui/core';\n\n// name, min_age_limit, vaccine, capacity, fee_type, fee\nconst SessionCard = ({name, vaccine, min_age, paid, capacity, fee}) => {\n  return (\n    <Card style={{backgroundColor: '#3f51b519', minWidth: '160px'}}>\n      <CardContent>\n        <h4 style={{\n          marginTop: '0px',\n        }}>\n          {name}\n        </h4>\n        <h6 style={{\n          marginTop: '-12px',\n        }}>\n          **{vaccine}**\n        </h6>\n        <h5\n        style={{\n          marginTop: '-9px',\n        }}>\n          Minimum Age: {min_age}\n        </h5><h5\n        style={{\n          marginTop: '-15px',\n        }}>\n          Capacity: {capacity}\n        </h5>\n        <h5\n        style={{\n          marginTop: '-15px',\n        }}>\n          Fee: ₹{fee}\n        </h5>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport const PaginatedResults = ({sessions}) => {\n  return (\n    <Grid container spacing={4} style={{\n      paddingRight: '10px',\n      marginBottom: '20px',\n      width: '90%',\n      // backgroundColor: 'yellow'\n    }}>\n      {\n        sessions.map((session, idx) => (\n          <Grid item xs={12} sm={6} md={6} lg={4}>\n            <SessionCard\n              name = {session.name}\n              vaccine = {session.vaccine}\n              min_age = {session.min_age_limit}\n              paid = {session.fee_type === \"Free\" ? false : true}\n              capacity = {session.available_capacity}\n              fee = {session.fee}\n              key={session.center_id}\n            />\n          </Grid>\n        ))\n      }\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { PaginatedResults } from './PaginatedResults';\n\n\n// card for each, grid, pagination\nconst Results = ({results, currPage}) => {\n  const perPage = 15;\n  const indexOfLastItem = currPage*perPage;\n  const indexOfFirstItem = indexOfLastItem - perPage;\n  // console.log(results);\n  const currResults = results.slice(indexOfFirstItem, indexOfLastItem);\n\n  return (\n    <div style={{marginTop: '45px', paddingLeft: '25px'}}>\n      {results.length !== 0 ? (\n        <>\n          <h2 style={{marginBottom: '35px'}}>Available Slots:</h2>\n          <PaginatedResults sessions={currResults} />\n        </>\n      ) : (\n        <h2 style={{color: 'red'}}>Sorry. We could not find any slots. Try something else.</h2>\n      )}\n    </div>\n  );\n}\n\nexport default Results;","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { MenuItem } from '@material-ui/core';\nimport axios from 'axios';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport Button from '@material-ui/core/Button';\nimport format from 'date-fns/format'\nimport Pagination from '@material-ui/lab/Pagination'\n\nimport {states} from './constants/states';\nimport {getResults} from './services/results';\nimport Results from './Results';\n\nconst App = () => {\n  const [stateList] = useState(states);\n  const [districtList, setDistrictList] = useState([]);\n  const [selectedStateObj, setSelectedStateObj] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [selectedDistrictObj, setSelectedDistrictObj] = useState(\"\");\n  const [age, setAge] = useState('');\n  const [pin, setPin] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [results, setResults] = useState(null);\n  const [currPage, setCurrPage] = useState(1);\n\n  const getDistricts = async (event) => {\n    try {\n      const res = await axios.get('https://cdn-api.co-vin.in/api/v2/admin/location/districts/'+event.target.value._id, {\n        headers: {\n          'accept': 'application/json',\n          'Accept-Language': 'en-US',\n        }\n      });\n      if(res.data.districts.length > 0) {\n        setDistrictList(res.data.districts)\n      }\n    } catch(err) {\n      console.error(err);\n    }\n  }\n\n  const handleStateChange = (event) => {\n    setSelectedStateObj(event.target.value);\n    getDistricts(event);\n  }\n\n  const handleDistrictChange = (event) => {\n    setSelectedDistrictObj(event.target.value);\n  }\n\n  const handleDateChange = (date) => setSelectedDate(date);\n  const handlePinInput = e => setPin(e.target.value);\n  const handleAgeInput = e => setAge(e.target.value);\n\n  const getFinalResults = async () => {\n    const date = format(new Date(selectedDate), 'dd-MM-yyyy');\n    setLoading(true);\n    const resultsList = await getResults(pin, date, selectedDistrictObj.district_id);\n    if(resultsList && resultsList.length !== 0) {\n      if(age.trim() !== '') {\n        const final = resultsList.filter(session => {\n          return +age >= session.min_age_limit;\n        });\n        console.log(final);\n        setResults(final);\n      }\n      else {\n        setResults(resultsList);\n      }\n    }\n    setLoading(false);\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    // console.log(selectedDate);\n    getFinalResults();\n  }\n\n  const onPageChange = (event, page) => {\n    setCurrPage(page);\n  }\n\n  return(\n    <div style={{flex: 1, paddingTop: '30px', paddingBottom: '30px'}}>\n      <form onSubmit={handleFormSubmit}>\n        <Grid container spacing={3} style={{paddingRight: '350px', paddingLeft: '30px'}}>\n          <Grid item xs={12} md={6} lg={6} sm={12}>\n            <TextField\n              select\n              id='state-dropdown'\n              label='Select State'\n              value={selectedStateObj}\n              onChange={handleStateChange}\n              helperText='Please Select your State'\n              style={{width: '300px', minWidth: '170px'}}\n              required\n              // variant='filled'\n            >\n              {stateList.map(state => (\n                <MenuItem key={state._id} value={state}>\n                  {state.name}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n          <Grid item xs={12} md={6} lg={6} sm={12}>\n            <TextField\n              select\n              id='district-dropdown'\n              label='Select District'\n              value={selectedDistrictObj}\n              onChange={handleDistrictChange}\n              helperText='Please Select your District'\n              style={{width: '300px', minWidth: '170px'}}\n              disabled={!districtList.length>0}\n              required\n              // variant='filled'\n            >\n              {districtList.map(district => (\n                <MenuItem key={district.district_id} value={district}>\n                  {district.district_name}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid item xs={12} md={3} lg={3} sm={6}>\n              <KeyboardDatePicker\n                // margin=\"normal\"\n                id=\"date-picker-dialog\"\n                label=\"Date\"\n                format=\"dd-MM-yyyy\"\n                value={selectedDate}\n                onChange={handleDateChange}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n                helperText=\"Pick a date\"\n                required\n                style={{\n                  minWidth: '140px',\n                }}\n                // variant='filled'\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n          <Grid item xs={12} md={3} lg={3} sm={6}>\n            <TextField\n              id='pin-field'\n              label='Pincode'\n              value={pin}\n              onChange={handlePinInput}\n              helperText='Enter Pincode'\n              style={{width: '140px'}}\n              // variant='filled'\n            />\n          </Grid>\n          <Grid item xs={6} md={3} lg={3} sm={6}>\n            <TextField\n              id='age-field'\n              label='Age'\n              value={age}\n              onChange={handleAgeInput}\n              helperText='Enter Age'\n              style={{width: '100px'}}\n              // variant='filled'\n            />\n          </Grid>\n          <Grid item xs={12} md={3} lg={3} sm={12}>\n            <Button size='medium' variant='contained' color='primary' style={{\n              height: '40px',\n              marginTop: '10px'\n            }}\n            type='submit'\n            >\n              Search\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n      {results && <Results results={results} currPage={currPage} />}\n      {results && \n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            // marginBottom: '30px',\n          }}\n        >\n          <Pagination count={Math.ceil(results.length/15)} color='primary' size='large' onChange={onPageChange}\n            // style={{\n            //   alig\n            // }}\n          />\n        </div>\n      }\n    </div>\n  );\n  \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n"],"sourceRoot":""}